---
# See https://pre-commit.com for more information
# See https://pre-commit.com/hooks.html for more hooks
fail_fast: false

repos:
  - repo: https://github.com/pre-commit/pre-commit-hooks
    rev: v4.3.0
    hooks:
      - id: trailing-whitespace
        exclude: .woven/
      - id: end-of-file-fixer
        exclude: .woven/
      - id: check-yaml
      - id: check-added-large-files
      - id: check-shebang-scripts-are-executable
      - id: check-merge-conflict
      - id: detect-private-key
      - id: requirements-txt-fixer

  - repo: https://github.com/alessandrojcm/commitlint-pre-commit-hook
    rev: v9.0.0
    hooks:
      - id: commitlint
        stages: [commit-msg]
        additional_dependencies: ["@commitlint/config-conventional@16.2.1"]

  - repo: https://github.com/codespell-project/codespell.git
    rev: v2.1.0
    hooks:
      - id: codespell
        args: ["-w", "--ignore-words-list", "equipments"]
        files: ^.*\.(md|py|jinja|yaml|sh|yml)$

  - repo: https://github.com/pre-commit/mirrors-prettier
    rev: v2.5.1
    # Otherwise will fail on commit-msg hook
    hooks:
      - id: prettier
        stages: [commit]
        exclude: (Pipfile.lock|.woven/.*)

  - repo: https://github.com/igorshubovych/markdownlint-cli
    rev: v0.31.0
    hooks:
      - id: markdownlint
        args:
          [
            --config,
            ".markdownlint.yaml",
            "--ignore",
            ".woven/release-notes.md",
            "--ignore",
            "stf-cli/tests/resources/step_catalog/references/*.md",
          ]

  - repo: https://github.com/adrienverge/yamllint
    rev: v1.26.3
    hooks:
      - id: yamllint
        args: [-s]

  - repo: https://github.com/jumanjihouse/pre-commit-hooks/
    rev: 2.1.5
    hooks:
      - id: shfmt
        args:
          - -i
          - "2"
          - -ci
      - id: shellcheck
      - id: script-must-not-have-extension

  - repo: https://github.com/pycqa/isort
    rev: 5.12.0
    hooks:
      - id: isort
        args: ["--profile", "black"]

  # Python code formatting
  - repo: https://github.com/psf/black
    rev: 22.3.0
    hooks:
      - id: black

  # Python code formatting in code blocks inside docs
  - repo: https://github.com/asottile/blacken-docs
    rev: v1.12.1
    hooks:
      - id: blacken-docs
        additional_dependencies: [black==22.3.0]

  - repo: https://github.com/pycqa/flake8
    rev: 4.0.1
    hooks:
      - id: flake8
        entry: pflake8
        additional_dependencies:
          [
            flake8-bugbear==22.1.11,
            flake8-docstrings==1.6.0,
            pep8-naming==0.13.0,
            pyproject-flake8==0.0.1a2,
          ]
        args:
          - "--max-line-length=100"

  - repo: local
    hooks:
      - id: mypy-stf-core
        name: mypy-stf-core
        language: system
        files: ^stf-core/
        entry: bash -c 'cd stf-core && poetry run mypy --install-types --non-interactive .'
        pass_filenames: false
      - id: mypy-stf-cli
        name: mypy-stf-cli
        language: system
        files: ^stf-cli/
        entry: bash -c 'cd stf-cli && poetry run mypy --install-types --non-interactive .'
        pass_filenames: false
      - id: mypy-stf-service
        name: mypy-stf-service
        language: system
        files: ^stf-service/
        entry: bash -c 'cd stf-service && poetry run mypy --install-types --non-interactive .'
        pass_filenames: false
      - id: mypy-stf-test-utils
        name: mypy-stf-test-utils
        language: system
        files: ^stf-test-utils/
        entry: bash -c 'cd stf-test-utils && poetry run mypy --install-types --non-interactive .'
        pass_filenames: false

  # Poetry pre-commit (updated hook to run on all project toml ~ not working)
  # https://github.com/python-poetry/poetry
  - repo: local
    hooks:
      - id: poetry-check
        name: poetry-check
        description: run poetry check to validate config from script
        entry: ./tools/poetry_check_and_lock
        language: system
        types: [file, toml]
        pass_filenames: false

  # Slackbot pre-commit (backticks cause failure in publish message)
  - repo: local
    hooks:
      - id: check-backticks
        name: Check for Backticks
        language: system
        files: ^docs/releases/.*\.md$
        description: verify that the slackbot message has no backticks
        entry: bash ./tools/check_backticks
        types: [file]

  - repo: https://github.com/PyCQA/docformatter.git
    rev: v1.4
    hooks:
      - id: docformatter
        args: ["--in-place"]

  # Security
  - repo: https://github.com/Yelp/detect-secrets
    rev: v1.3.0
    hooks:
      - id: detect-secrets

  - repo: https://github.com/zricethezav/gitleaks
    rev: v8.5.3
    hooks:
      - id: gitleaks

  # Dockerfile
  - repo: https://github.com/hadolint/hadolint
    rev: v2.12.0
    hooks:
      - id: hadolint-docker
        args: ["--ignore", "DL3008"]
